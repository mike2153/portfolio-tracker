{
  "openapi": "3.1.0",
  "info": {
    "title": "Portfolio Tracker API (Simplified)",
    "description": "Simplified backend for portfolio tracking with extensive debugging",
    "version": "2.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "Health check endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/auth/validate": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Backend Api Validate Token",
        "description": "Validate if token is valid (doesn't require auth)",
        "operationId": "backend_api_validate_token_api_auth_validate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Validate Token Api Auth Validate Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/symbol_search": {
      "get": {
        "tags": [
          "Research"
        ],
        "summary": "Backend Api Symbol Search Handler",
        "description": "Search for stock symbols with intelligent scoring\nReturns relevance-sorted results from cache and Alpha Vantage",
        "operationId": "backend_api_symbol_search_handler_api_symbol_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query for stock symbols",
              "title": "Q"
            },
            "description": "Search query for stock symbols"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of results",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Symbol Search Handler Api Symbol Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stock_overview": {
      "get": {
        "tags": [
          "Research"
        ],
        "summary": "Backend Api Stock Overview Handler",
        "description": "Get comprehensive stock overview data\nCombines real-time quote and company fundamentals",
        "operationId": "backend_api_stock_overview_handler_api_stock_overview_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock symbol to get overview for",
              "title": "Symbol"
            },
            "description": "Stock symbol to get overview for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Stock Overview Handler Api Stock Overview Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/quote/{symbol}": {
      "get": {
        "tags": [
          "Research"
        ],
        "summary": "Backend Api Quote Handler",
        "description": "Get real-time quote data for a symbol using CurrentPriceManager",
        "operationId": "backend_api_quote_handler_api_quote__symbol__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Quote Handler Api Quote  Symbol  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/historical_price/{symbol}": {
      "get": {
        "tags": [
          "Research"
        ],
        "summary": "Backend Api Historical Price Handler",
        "operationId": "backend_api_historical_price_handler_api_historical_price__symbol__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Date in YYYY-MM-DD format for historical price lookup",
              "title": "Date"
            },
            "description": "Date in YYYY-MM-DD format for historical price lookup"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Historical Price Handler Api Historical Price  Symbol  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/financials/{symbol}": {
      "get": {
        "tags": [
          "Research"
        ],
        "summary": "Backend Api Financials Handler",
        "description": "Get company financials with intelligent caching\n\nThis endpoint implements the required caching pattern:\n1. Check Supabase for fresh data (<24h old)\n2. Return cached data if fresh\n3. Fetch from external API if stale/missing\n4. Store in Supabase for future requests",
        "operationId": "backend_api_financials_handler_api_financials__symbol__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Type of financial data: OVERVIEW, INCOME_STATEMENT, BALANCE_SHEET, CASH_FLOW",
              "default": "OVERVIEW",
              "title": "Data Type"
            },
            "description": "Type of financial data: OVERVIEW, INCOME_STATEMENT, BALANCE_SHEET, CASH_FLOW"
          },
          {
            "name": "force_refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force refresh from API even if cached",
              "default": false,
              "title": "Force Refresh"
            },
            "description": "Force refresh from API even if cached"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Financials Handler Api Financials  Symbol  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/financials/force-refresh": {
      "post": {
        "tags": [
          "Research"
        ],
        "summary": "Backend Api Force Refresh Financials Handler",
        "description": "Force refresh financial data from external API\nAdmin/dev endpoint for manual cache invalidation",
        "operationId": "backend_api_force_refresh_financials_handler_api_financials_force_refresh_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Stock symbol to refresh",
              "title": "Symbol"
            },
            "description": "Stock symbol to refresh"
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Type of financial data to refresh: OVERVIEW, INCOME_STATEMENT, BALANCE_SHEET, CASH_FLOW",
              "default": "OVERVIEW",
              "title": "Data Type"
            },
            "description": "Type of financial data to refresh: OVERVIEW, INCOME_STATEMENT, BALANCE_SHEET, CASH_FLOW"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Force Refresh Financials Handler Api Financials Force Refresh Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/stock_prices/{symbol}": {
      "get": {
        "tags": [
          "Research"
        ],
        "summary": "Backend Api Stock Prices Handler",
        "description": "Get historical price data for a stock ticker with flexible period selection.",
        "operationId": "backend_api_stock_prices_handler_api_stock_prices__symbol__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days of historical data",
              "title": "Days"
            },
            "description": "Number of days of historical data"
          },
          {
            "name": "years",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of years of historical data",
              "title": "Years"
            },
            "description": "Number of years of historical data"
          },
          {
            "name": "ytd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Year-to-date data",
              "default": false,
              "title": "Ytd"
            },
            "description": "Year-to-date data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Stock Prices Handler Api Stock Prices  Symbol  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/news/{symbol}": {
      "get": {
        "tags": [
          "Research"
        ],
        "summary": "Backend Api News Handler",
        "description": "Fetch news and sentiment data for a stock symbol",
        "operationId": "backend_api_news_handler_api_news__symbol__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of articles",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of articles"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api News Handler Api News  Symbol  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/portfolio": {
      "get": {
        "tags": [
          "Portfolio"
        ],
        "summary": "Backend Api Get Portfolio",
        "description": "Get user's current portfolio holdings calculated from transactions",
        "operationId": "backend_api_get_portfolio_api_portfolio_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "force_refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force refresh cache",
              "default": false,
              "title": "Force Refresh"
            },
            "description": "Force refresh cache"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Get Portfolio Api Portfolio Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": [
          "Portfolio"
        ],
        "summary": "Backend Api Get Transactions",
        "description": "Get user's transaction history",
        "operationId": "backend_api_get_transactions_api_transactions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Get Transactions Api Transactions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Portfolio"
        ],
        "summary": "Backend Api Add Transaction",
        "description": "Add a new transaction",
        "operationId": "backend_api_add_transaction_api_transactions_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Add Transaction Api Transactions Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/clear": {
      "post": {
        "tags": [
          "Portfolio"
        ],
        "summary": "Backend Api Clear Cache",
        "description": "Clear the portfolio metrics cache for the current user",
        "operationId": "backend_api_clear_cache_api_cache_clear_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Clear Cache Api Cache Clear Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/transactions/{transaction_id}": {
      "put": {
        "tags": [
          "Portfolio"
        ],
        "summary": "Backend Api Update Transaction",
        "description": "Update an existing transaction",
        "operationId": "backend_api_update_transaction_api_transactions__transaction_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Transaction Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Update Transaction Api Transactions  Transaction Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Portfolio"
        ],
        "summary": "Backend Api Delete Transaction",
        "description": "Delete a transaction",
        "operationId": "backend_api_delete_transaction_api_transactions__transaction_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Delete Transaction Api Transactions  Transaction Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/allocation": {
      "get": {
        "tags": [
          "Portfolio"
        ],
        "summary": "Backend Api Get Allocation",
        "description": "Unified allocation API endpoint for both dashboard and analytics pages\nReturns comprehensive portfolio allocation data with all calculations",
        "operationId": "backend_api_get_allocation_api_allocation_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "force_refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force refresh cache",
              "default": false,
              "title": "Force Refresh"
            },
            "description": "Force refresh cache"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Get Allocation Api Allocation Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Backend Api Get Dashboard",
        "description": "Return portfolio snapshot + market blurb for the dashboard.",
        "operationId": "backend_api_get_dashboard_api_dashboard_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "force_refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force refresh cache",
              "default": false,
              "title": "Force Refresh"
            },
            "description": "Force refresh cache"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Get Dashboard Api Dashboard Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/performance": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Backend Api Get Performance",
        "description": "Return portfolio vs index performance for the requested period.",
        "operationId": "backend_api_get_performance_api_dashboard_performance_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1M",
              "title": "Period"
            }
          },
          {
            "name": "benchmark",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{1,5}$",
              "default": "SPY",
              "title": "Benchmark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Get Performance Api Dashboard Performance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/debug/toggle-info-logging": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Toggle Info Logging",
        "description": "Toggle info logging on/off at runtime\nRequires authentication for security",
        "operationId": "toggle_info_logging_api_debug_toggle_info_logging_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/debug/logging-status": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Logging Status",
        "description": "Get current logging configuration status",
        "operationId": "get_logging_status_api_debug_logging_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/debug/reset-circuit-breaker": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Reset Circuit Breaker",
        "description": "Reset circuit breaker for price services\nUseful when the circuit breaker is blocking API calls after failures",
        "operationId": "reset_circuit_breaker_api_debug_reset_circuit_breaker_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Service name (alpha_vantage, dividend_api) or None for all",
              "title": "Service"
            },
            "description": "Service name (alpha_vantage, dividend_api) or None for all"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/gainers": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Backend Api Get Gainers",
        "description": "Get top gaining holdings for the dashboard.",
        "operationId": "backend_api_get_gainers_api_dashboard_gainers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "force_refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Force Refresh"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Get Gainers Api Dashboard Gainers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/losers": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Backend Api Get Losers",
        "description": "Get top losing holdings for the dashboard.",
        "operationId": "backend_api_get_losers_api_dashboard_losers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "force_refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Force Refresh"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Get Losers Api Dashboard Losers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/summary": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Analytics Summary",
        "description": "Get analytics summary with KPI cards data\nReturns portfolio value, profit, IRR, passive income, and cash balance\nOPTIMIZED: Uses cached portfolio calculation to reduce redundant database calls",
        "operationId": "backend_api_analytics_summary_api_analytics_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Analytics Summary Api Analytics Summary Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/analytics/holdings": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Analytics Holdings",
        "description": "Get detailed holdings data for analytics table\nReturns holdings with cost basis, value, dividends, gains, P&L, etc.",
        "operationId": "backend_api_analytics_holdings_api_analytics_holdings_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_sold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include sold holdings in response",
              "default": false,
              "title": "Include Sold"
            },
            "description": "Include sold holdings in response"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Analytics Holdings Api Analytics Holdings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/dividends": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Analytics Dividends",
        "description": "REFACTORED: Get dividends with unified data model and transaction-based confirmation\nFixes all data consistency and API contract issues",
        "operationId": "backend_api_analytics_dividends_api_analytics_dividends_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "confirmed_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return only confirmed dividends",
              "default": false,
              "title": "Confirmed Only"
            },
            "description": "Return only confirmed dividends"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Analytics Dividends Api Analytics Dividends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/dividends/confirm": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Confirm Dividend",
        "description": "OPTIMIZED: Confirm dividend with proper validation and transaction creation\nNO PORTFOLIO RECALCULATION - Only dividend operations (uses Alpha Vantage dividend APIs)",
        "operationId": "backend_api_confirm_dividend_api_analytics_dividends_confirm_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dividend_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Dividend ID to confirm",
              "title": "Dividend Id"
            },
            "description": "Dividend ID to confirm"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Confirm Dividend Api Analytics Dividends Confirm Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/dividends/sync": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Sync Dividends",
        "description": "REFACTORED: Manually sync dividends with idempotent upserts",
        "operationId": "backend_api_sync_dividends_api_analytics_dividends_sync_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Symbol to sync dividends for",
              "title": "Symbol"
            },
            "description": "Symbol to sync dividends for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Sync Dividends Api Analytics Dividends Sync Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/dividends/sync-all": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Sync All Dividends",
        "description": "Automatically sync dividends for all user's holdings\nOPTIMIZED: Includes rate limiting to prevent excessive syncing",
        "operationId": "backend_api_sync_all_dividends_api_analytics_dividends_sync_all_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Sync All Dividends Api Analytics Dividends Sync All Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/analytics/dividends/summary": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Dividend Summary",
        "description": "Get lightweight dividend summary for dividend page cards only\nThis is much faster than the full analytics summary",
        "operationId": "backend_api_dividend_summary_api_analytics_dividends_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Dividend Summary Api Analytics Dividends Summary Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/analytics/dividends/assign-simple": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Assign Dividends Simple",
        "description": "NEW SIMPLE DIVIDEND ASSIGNMENT: Use loop-based approach to assign dividends to users",
        "operationId": "backend_api_assign_dividends_simple_api_analytics_dividends_assign_simple_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Assign Dividends Simple Api Analytics Dividends Assign Simple Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/analytics/dividends/reject": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Reject Dividend",
        "description": "Reject a dividend - sets rejected=true, hiding it permanently from the user",
        "operationId": "backend_api_reject_dividend_api_analytics_dividends_reject_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dividend_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Dividend ID to reject",
              "title": "Dividend Id"
            },
            "description": "Dividend ID to reject"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Reject Dividend Api Analytics Dividends Reject Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/dividends/edit": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Edit Dividend",
        "description": "Edit a dividend by creating a new one and rejecting the original\nHandles both pending and confirmed dividends",
        "operationId": "backend_api_edit_dividend_api_analytics_dividends_edit_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "original_dividend_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Original dividend ID to edit",
              "title": "Original Dividend Id"
            },
            "description": "Original dividend ID to edit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Edit Dividend Api Analytics Dividends Edit Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/dividends/add-manual": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Backend Api Add Manual Dividend",
        "description": "Manually add a dividend entry\nCreates both a user_dividend record and optionally a transaction if update_cash_balance is true",
        "operationId": "backend_api_add_manual_dividend_api_analytics_dividends_add_manual_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Add Manual Dividend Api Analytics Dividends Add Manual Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/watchlist": {
      "get": {
        "tags": [
          "Watchlist",
          "watchlist"
        ],
        "summary": "Backend Api Get Watchlist",
        "description": "Get user's watchlist with optional current price data.\n\nArgs:\n    user: Authenticated user data\n    include_quotes: Whether to include current price data\n    \nReturns:\n    Dict containing watchlist items and count",
        "operationId": "backend_api_get_watchlist_api_watchlist_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_quotes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include current price data",
              "default": true,
              "title": "Include Quotes"
            },
            "description": "Include current price data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Get Watchlist Api Watchlist Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/watchlist/{symbol}": {
      "post": {
        "tags": [
          "Watchlist",
          "watchlist"
        ],
        "summary": "Backend Api Add To Watchlist",
        "description": "Add a stock to user's watchlist.\n\nArgs:\n    symbol: Stock symbol to add\n    data: Optional additional data (notes, target price)\n    user: Authenticated user data\n    \nReturns:\n    Dict with success status and message",
        "operationId": "backend_api_add_to_watchlist_api_watchlist__symbol__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/WatchlistAdd"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Add To Watchlist Api Watchlist  Symbol  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Watchlist",
          "watchlist"
        ],
        "summary": "Backend Api Remove From Watchlist",
        "description": "Remove a stock from user's watchlist.\n\nArgs:\n    symbol: Stock symbol to remove\n    user: Authenticated user data\n    \nReturns:\n    Dict with success status and message",
        "operationId": "backend_api_remove_from_watchlist_api_watchlist__symbol__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Remove From Watchlist Api Watchlist  Symbol  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Watchlist",
          "watchlist"
        ],
        "summary": "Backend Api Update Watchlist Item",
        "description": "Update watchlist item (notes, target price).\n\nArgs:\n    symbol: Stock symbol to update\n    data: Update data (notes, target price)\n    user: Authenticated user data\n    \nReturns:\n    Dict with success status and message",
        "operationId": "backend_api_update_watchlist_item_api_watchlist__symbol__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchlistUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Update Watchlist Item Api Watchlist  Symbol  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/watchlist/{symbol}/status": {
      "get": {
        "tags": [
          "Watchlist",
          "watchlist"
        ],
        "summary": "Backend Api Check Watchlist Status",
        "description": "Check if a stock is in user's watchlist.\n\nArgs:\n    symbol: Stock symbol to check\n    user: Authenticated user data\n    \nReturns:\n    Dict with watchlist status",
        "operationId": "backend_api_check_watchlist_status_api_watchlist__symbol__status_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Backend Api Check Watchlist Status Api Watchlist  Symbol  Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/profile": {
      "get": {
        "tags": [
          "User Profile"
        ],
        "summary": "Get Profile",
        "description": "Get current user's profile\n\nReturns:\n    User profile data including base currency preference",
        "operationId": "get_profile_api_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Profile"
        ],
        "summary": "Create Profile",
        "description": "Create user profile with currency preference\n\nArgs:\n    profile_data: Profile information including base currency\n    \nReturns:\n    Created profile data",
        "operationId": "create_profile_api_profile_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "User Profile"
        ],
        "summary": "Update Profile",
        "description": "Update user profile including currency preference\n\nArgs:\n    updates: Fields to update\n    \nReturns:\n    Updated profile data",
        "operationId": "update_profile_api_profile_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/profile/currency": {
      "get": {
        "tags": [
          "User Profile"
        ],
        "summary": "Get Base Currency",
        "description": "Get user's base currency preference\n\nReturns:\n    Dictionary with base_currency field",
        "operationId": "get_base_currency_api_profile_currency_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Get Base Currency Api Profile Currency Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/forex/rate": {
      "get": {
        "tags": [
          "Forex"
        ],
        "summary": "Get Exchange Rate",
        "description": "Get exchange rate between two currencies\n\nArgs:\n    from_currency: Source currency code\n    to_currency: Target currency code  \n    date: Optional date for historical rate\n    \nReturns:\n    Exchange rate information",
        "operationId": "get_exchange_rate_api_forex_rate_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "from_currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Source currency code (e.g., USD)",
              "title": "From Currency"
            },
            "description": "Source currency code (e.g., USD)"
          },
          {
            "name": "to_currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Target currency code (e.g., EUR)",
              "title": "To Currency"
            },
            "description": "Target currency code (e.g., EUR)"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date for historical rate (YYYY-MM-DD)",
              "title": "Date"
            },
            "description": "Date for historical rate (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Exchange Rate Api Forex Rate Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/forex/latest": {
      "get": {
        "tags": [
          "Forex"
        ],
        "summary": "Get Latest Exchange Rate",
        "description": "Get latest available exchange rate between two currencies\n\nArgs:\n    from_currency: Source currency code\n    to_currency: Target currency code\n    \nReturns:\n    Latest exchange rate information",
        "operationId": "get_latest_exchange_rate_api_forex_latest_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "from_currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Source currency code",
              "title": "From Currency"
            },
            "description": "Source currency code"
          },
          {
            "name": "to_currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Target currency code",
              "title": "To Currency"
            },
            "description": "Target currency code"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Latest Exchange Rate Api Forex Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/forex/convert": {
      "post": {
        "tags": [
          "Forex"
        ],
        "summary": "Convert Currency",
        "description": "Convert an amount from one currency to another\n\nArgs:\n    amount: Amount to convert\n    from_currency: Source currency code\n    to_currency: Target currency code\n    date: Optional date for historical rate\n    \nReturns:\n    Conversion result",
        "operationId": "convert_currency_api_forex_convert_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "description": "Amount to convert",
              "title": "Amount"
            },
            "description": "Amount to convert"
          },
          {
            "name": "from_currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Source currency code",
              "title": "From Currency"
            },
            "description": "Source currency code"
          },
          {
            "name": "to_currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Target currency code",
              "title": "To Currency"
            },
            "description": "Target currency code"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date for historical rate (YYYY-MM-DD)",
              "title": "Date"
            },
            "description": "Date for historical rate (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Convert Currency Api Forex Convert Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "TransactionCreate": {
        "properties": {
          "symbol": {
            "type": "string",
            "maxLength": 8,
            "minLength": 1,
            "title": "Symbol"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "Buy",
              "Sell"
            ],
            "title": "Transaction Type"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0
              },
              {
                "type": "string"
              }
            ],
            "title": "Quantity",
            "description": "Must be positive"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "title": "Price",
            "description": "Must be non-negative"
          },
          "commission": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "title": "Commission",
            "description": "Must be non-negative",
            "default": "0"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Currency",
            "description": "Transaction currency",
            "default": "USD"
          },
          "exchange_rate": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0
              },
              {
                "type": "string"
              }
            ],
            "title": "Exchange Rate",
            "description": "Exchange rate to base currency",
            "default": "1.0"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "symbol",
          "transaction_type",
          "quantity",
          "price",
          "date"
        ],
        "title": "TransactionCreate",
        "description": "Model for creating a new transaction."
      },
      "TransactionUpdate": {
        "properties": {
          "symbol": {
            "type": "string",
            "maxLength": 8,
            "minLength": 1,
            "title": "Symbol"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "Buy",
              "Sell"
            ],
            "title": "Transaction Type"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0
              },
              {
                "type": "string"
              }
            ],
            "title": "Quantity",
            "description": "Must be positive"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "title": "Price",
            "description": "Must be non-negative"
          },
          "commission": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "title": "Commission",
            "description": "Must be non-negative",
            "default": "0"
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "title": "Currency",
            "description": "Transaction currency",
            "default": "USD"
          },
          "exchange_rate": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0
              },
              {
                "type": "string"
              }
            ],
            "title": "Exchange Rate",
            "description": "Exchange rate to base currency",
            "default": "1.0"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "symbol",
          "transaction_type",
          "quantity",
          "price",
          "date"
        ],
        "title": "TransactionUpdate",
        "description": "Model for updating an existing transaction."
      },
      "UserProfileCreate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "base_currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Currency"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "UserProfileCreate",
        "description": "Model for creating user profile."
      },
      "UserProfileResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "base_currency": {
            "type": "string",
            "title": "Base Currency"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "first_name",
          "last_name",
          "country",
          "base_currency",
          "created_at",
          "updated_at"
        ],
        "title": "UserProfileResponse",
        "description": "Response model for user profile"
      },
      "UserProfileUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "base_currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Currency"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "UserProfileUpdate",
        "description": "Model for updating user profile."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WatchlistAdd": {
        "properties": {
          "symbol": {
            "type": "string",
            "maxLength": 8,
            "minLength": 1,
            "title": "Symbol"
          },
          "target_price": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "gt": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Price"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "symbol"
        ],
        "title": "WatchlistAdd",
        "description": "Model for adding to watchlist."
      },
      "WatchlistUpdate": {
        "properties": {
          "target_price": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "gt": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Price"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "WatchlistUpdate",
        "description": "Model for updating watchlist item."
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}